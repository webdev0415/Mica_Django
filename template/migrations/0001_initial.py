# Generated by Django 3.1.5 on 2021-01-21 00:14

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LogicalSymptopGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('group_flag', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RcodeDatastore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_icd10_rcode', models.CharField(blank=True, max_length=300, null=True)),
                ('ds_code', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SnomedCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('concept_id', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(blank=True, null=True), size=None)),
                ('expression', models.CharField(blank=True, max_length=300, null=True)),
                ('list_valuecode', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiple_values', models.CharField(blank=True, max_length=300, null=True)),
                ('criticality', models.IntegerField(blank=True, null=True)),
                ('treatable', models.BooleanField(null=True)),
                ('prior', models.DecimalField(decimal_places=2, max_digits=5)),
                ('question', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question', models.CharField(blank=True, max_length=300, null=True)),
                ('antithesis', models.FloatField(blank=True, null=True)),
                ('sub_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('bodyparts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('pain_swelling_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('icd_r_odes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('display_ymptom', models.BooleanField(null=True)),
                ('kiosk_name', models.CharField(blank=True, max_length=300, null=True)),
                ('formal_name', models.CharField(blank=True, max_length=300, null=True)),
                ('med_necessary', models.BooleanField(null=True)),
                ('min_diag_criteria', models.BooleanField(null=True)),
                ('display_dr_app', models.BooleanField(null=True)),
                ('gender_group', models.CharField(blank=True, max_length=300, null=True)),
                ('cardinality', models.BooleanField(null=True)),
                ('logical_group_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('de_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('symptom_type', models.CharField(blank=True, max_length=300, null=True)),
                ('time_type', models.TimeField()),
                ('min_range', models.FloatField(blank=True, null=True)),
                ('max_range', models.FloatField(blank=True, null=True)),
                ('is_range', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('parent', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('bodypart_code', models.CharField(blank=True, max_length=300, null=True)),
                ('es_name', models.CharField(blank=True, max_length=300, null=True)),
                ('cascade_up', models.BooleanField(null=True)),
                ('cascade_down', models.BooleanField(null=True)),
                ('symptom_template', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('symptom_count', models.BooleanField(null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('group_id', models.CharField(blank=True, max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criticality', models.IntegerField(blank=True, null=True)),
                ('treatable', models.BooleanField(null=True)),
                ('multiple_values', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('time_type', models.CharField(blank=True, max_length=300, null=True)),
                ('question_text', models.CharField(blank=True, max_length=300, null=True)),
                ('icdrcode', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question_bk', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('es_name', models.CharField(blank=True, max_length=300, null=True)),
                ('symptom_type', models.CharField(blank=True, max_length=300, null=True)),
                ('px_no_normalized', models.FloatField(blank=True, null=True)),
                ('prior', models.FloatField(blank=True, null=True)),
                ('definition', models.CharField(blank=True, max_length=300, null=True)),
                ('painswelling_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('bias', models.BooleanField(null=True)),
                ('descriptor_file', models.CharField(blank=True, max_length=300, null=True)),
                ('scaletime_limit_text', models.CharField(blank=True, max_length=300, null=True)),
                ('timeunit_default', models.IntegerField(blank=True, null=True)),
                ('display_symptom', models.BooleanField(null=True)),
                ('displaydr_app', models.BooleanField(null=True)),
                ('active', models.BooleanField(null=True)),
                ('gender_group', models.CharField(blank=True, max_length=300, null=True)),
                ('cardinality', models.BooleanField(null=True)),
                ('antithesis', models.FloatField(blank=True, null=True)),
                ('time_range_start', models.IntegerField(blank=True, null=True)),
                ('time_range_stop', models.IntegerField(blank=True, null=True)),
                ('sub_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('datastore_templates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('snomed', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('logical', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('rcode', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
            ],
        ),
    ]
