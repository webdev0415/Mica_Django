# Generated by Django 3.1.5 on 2021-02-05 00:44

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataKeyStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('es_title', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataStoreSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_ref_date', models.BigIntegerField(blank=True, null=True)),
                ('source_id', models.IntegerField(blank=True, null=True)),
                ('added_by', models.CharField(blank=True, max_length=300, null=True)),
                ('source_info', models.CharField(blank=True, max_length=300, null=True)),
                ('verified', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LogicalSymptopGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('group_flag', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likelihood', models.IntegerField(default=0)),
                ('modifier_value', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RcodeDatastore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_icd10_rcode', models.CharField(blank=True, max_length=300, null=True)),
                ('ds_code', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_frame', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('section_id', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SnomedCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('concept_id', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(blank=True, null=True), size=None)),
                ('expression', models.CharField(blank=True, max_length=300, null=True)),
                ('list_valuecode', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symtom_id', models.CharField(blank=True, max_length=300, null=True)),
                ('multiple_values', models.CharField(blank=True, max_length=300, null=True)),
                ('criticality', models.IntegerField(blank=True, null=True)),
                ('treatable', models.BooleanField(null=True)),
                ('prior', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('question', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question', models.CharField(blank=True, max_length=300, null=True)),
                ('antithesis', models.FloatField(blank=True, null=True)),
                ('sub_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('pain_swelling_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, default=0, null=True)),
                ('display_symptom', models.BooleanField(null=True)),
                ('display_dr_app', models.BooleanField(null=True)),
                ('gender_group', models.CharField(blank=True, max_length=300, null=True)),
                ('cardinality', models.BooleanField(null=True)),
                ('logical_group_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), blank=True, null=True, size=None)),
                ('de_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), blank=True, null=True, size=None)),
                ('symptom_type', models.CharField(blank=True, max_length=300, null=True)),
                ('time_type', models.CharField(blank=True, max_length=300, null=True)),
                ('icdrcode', models.CharField(blank=True, max_length=300, null=True)),
                ('bias', models.BooleanField(null=True)),
                ('active', models.BooleanField(null=True)),
                ('time_range_start', models.IntegerField(blank=True, null=True)),
                ('time_range_stop', models.IntegerField(blank=True, null=True)),
                ('datastore_templates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), blank=True, null=True, size=None)),
                ('create_date', models.BigIntegerField(blank=True, null=True)),
                ('update_date', models.BigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('parent', models.CharField(blank=True, max_length=300, null=True)),
                ('category_id', models.CharField(blank=True, max_length=300, null=True)),
                ('bodypart_code', models.CharField(blank=True, max_length=300, null=True)),
                ('es_name', models.CharField(blank=True, max_length=300, null=True)),
                ('cascade_up', models.BooleanField(null=True)),
                ('cascade_down', models.BooleanField(null=True)),
                ('symptoms', models.ManyToManyField(blank=True, related_name='symptomcategory_symptom', to='template.Symptom')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criticality', models.IntegerField(blank=True, null=True)),
                ('treatable', models.BooleanField(null=True)),
                ('multiple_values', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('time_type', models.CharField(blank=True, max_length=300, null=True)),
                ('question_text', models.CharField(blank=True, max_length=300, null=True)),
                ('icdrcode', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question', models.CharField(blank=True, max_length=300, null=True)),
                ('es_question_bk', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('es_name', models.CharField(blank=True, max_length=300, null=True)),
                ('symptom_type', models.CharField(blank=True, max_length=300, null=True)),
                ('px_no_normalized', models.FloatField(blank=True, null=True)),
                ('prior', models.FloatField(blank=True, null=True)),
                ('definition', models.CharField(blank=True, max_length=300, null=True)),
                ('painswelling_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('bias', models.BooleanField(null=True)),
                ('descriptor_file', models.CharField(blank=True, max_length=300, null=True)),
                ('scaletime_limit_text', models.CharField(blank=True, max_length=300, null=True)),
                ('timeunit_default', models.IntegerField(blank=True, null=True)),
                ('display_symptom', models.BooleanField(null=True)),
                ('displaydr_app', models.BooleanField(null=True)),
                ('active', models.BooleanField(null=True)),
                ('gender_group', models.CharField(blank=True, max_length=300, null=True)),
                ('cardinality', models.BooleanField(null=True)),
                ('antithesis', models.FloatField(blank=True, null=True)),
                ('time_range_start', models.IntegerField(blank=True, null=True)),
                ('time_range_stop', models.IntegerField(blank=True, null=True)),
                ('sub_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('datastore_templates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('snomed', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('logical', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('rcode', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomTmpl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom_id', models.CharField(blank=True, max_length=300, null=True)),
                ('bias', models.BooleanField(null=True)),
                ('range_values', models.FloatField(blank=True, null=True)),
                ('descriptors', models.CharField(blank=True, max_length=300, null=True)),
                ('descriptor_file', models.CharField(blank=True, max_length=300, null=True)),
                ('question_text', models.CharField(blank=True, max_length=300, null=True)),
                ('scaletime_limit', models.IntegerField(blank=True, null=True)),
                ('scaletime_limit_start', models.IntegerField(blank=True, null=True)),
                ('timeunit_default', models.IntegerField(blank=True, null=True)),
                ('scaleinfo_text', models.CharField(blank=True, max_length=300, null=True)),
                ('datastore_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), blank=True, null=True, size=None)),
                ('criticality', models.IntegerField(blank=True, null=True)),
                ('treatable', models.BooleanField(null=True)),
                ('prior', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('es_question', models.CharField(blank=True, max_length=300, null=True)),
                ('antithesis', models.FloatField(blank=True, null=True)),
                ('display_symptom', models.BooleanField(null=True)),
                ('med_necessary', models.BooleanField(null=True)),
                ('min_diag_criteria', models.BooleanField(null=True)),
                ('display_dr_app', models.BooleanField(null=True)),
                ('gender_group', models.CharField(blank=True, max_length=300, null=True)),
                ('time_type', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ValueStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.BooleanField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('m_antithesis', models.FloatField(blank=True, null=True)),
                ('m_icd10_rcode', models.CharField(blank=True, max_length=300, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('display_list_value', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('es_name', models.CharField(blank=True, max_length=300, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('old_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymptomGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('group_id', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('symptom_count', models.BooleanField(blank=True, null=True)),
                ('create_date', models.BigIntegerField(blank=True, null=True)),
                ('updated_date', models.BigIntegerField(blank=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='symptomgroup_category', to='template.SymptomCategory')),
                ('datastore_ref_types', models.ManyToManyField(blank=True, related_name='symptomgroup_datakeystore', to='template.DataKeyStore')),
                ('sections', models.ManyToManyField(blank=True, related_name='symptomgroup_section', to='template.Section')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomDataStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bias', models.BooleanField(blank=True, null=True)),
                ('multiplier', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
                ('multiplier_code', models.CharField(blank=True, max_length=300, null=True)),
                ('likelihood', models.IntegerField(blank=True, null=True)),
                ('likely_diseases', models.CharField(blank=True, max_length=300, null=True)),
                ('rule_out', models.BooleanField(blank=True, null=True)),
                ('must', models.BooleanField(blank=True, null=True)),
                ('min_diag_criteria', models.BooleanField(blank=True, null=True)),
                ('med_necessary', models.BooleanField(blank=True, null=True)),
                ('modifier_values', models.ManyToManyField(blank=True, related_name='symptomdatastore_modifiertype', to='template.ModifierType')),
                ('source_info', models.ManyToManyField(blank=True, related_name='symptomdatastore_datastoresources', to='template.DataStoreSources')),
            ],
        ),
        migrations.AddField(
            model_name='symptom',
            name='rows',
            field=models.ManyToManyField(blank=True, related_name='symptom_symptomdatastore', to='template.SymptomDataStore'),
        ),
        migrations.AddField(
            model_name='symptom',
            name='symptoms_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='template.symptomtmpl'),
        ),
        migrations.AddField(
            model_name='section',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='datakeystore_valuestore', to='template.SymptomCategory'),
        ),
        migrations.AddField(
            model_name='modifiertype',
            name='scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='template.scale'),
        ),
        migrations.AddField(
            model_name='datakeystore',
            name='values',
            field=models.ManyToManyField(blank=True, related_name='datakeystore_valuestore', to='template.ValueStore'),
        ),
    ]
